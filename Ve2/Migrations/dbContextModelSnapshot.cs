// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ve2;

#nullable disable

namespace Ve2.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ve2.models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SpecialtyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("Ve2.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserGender")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<int>("UserType").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ve2.model.Doctor", b =>
                {
                    b.HasBaseType("Ve2.models.User");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Ve2.models.Patient", b =>
                {
                    b.HasBaseType("Ve2.models.User");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Ve2.model.Doctor", b =>
                {
                    b.HasOne("Ve2.models.Specialty", "SpecialtyNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecialtyId");

                    b.Navigation("SpecialtyNavigation");
                });

            modelBuilder.Entity("Ve2.models.Specialty", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
